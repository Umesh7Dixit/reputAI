import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "./components/Navbar";
import Footer from "./components/Footer";
import ContactForm from "./components/ContactForm";
import { ContactProvider } from './components/ContactContext';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ContactProvider>
          <Navbar/>
          {children}
          <ContactForm/>
          <Footer/>
        </ContactProvider>
      </body>
    </html>
  );
}












// // app/layout.tsx
// import { Metadata } from 'next';
// import { siteConfig } from '../.././seo.config';
// import Navbar from './components/Navbar';

// import { WebsiteStructuredData } from './components/StructuredData';

// export const metadata: Metadata = {
//   title: {
//     default: siteConfig.defaultTitle,
//     template: siteConfig.titleTemplate,
//   },
//   description: siteConfig.description,
//   metadataBase: new URL(siteConfig.url),
//   openGraph: {
//     type: 'website',
//     locale: 'en_US',
//     url: siteConfig.url,
//     title: siteConfig.defaultTitle,
//     description: siteConfig.description,
//     siteName: siteConfig.name,
//     images: [
//       {
//         url: siteConfig.ogImage,
//         width: 1200,
//         height: 630,
//         alt: siteConfig.name,
//       },
//     ],
//   },
//   twitter: {
//     card: 'summary_large_image',
//     title: siteConfig.defaultTitle,
//     description: siteConfig.description,
//     images: [siteConfig.ogImage],
//     creator: siteConfig.twitter.handle,
//   },
//   robots: {
//     index: true,
//     follow: true,
//   },
//   icons: {
//     icon: '/favicon.ico',
//     apple: '/apple-icon.png',
//   },
// };

// export default function RootLayout({
//   children,
// }: {
//   children: React.ReactNode;
// }) {
//   return (
//     <html lang="en">
//       <head>
//         <WebsiteStructuredData />
//       </head>
//       <body>
//         <Navbar/>
//         {children}
//       </body>
//     </html>
//   );
// }